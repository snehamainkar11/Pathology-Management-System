<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="patholabDBDataSet19" targetNamespace="http://tempuri.org/patholabDBDataSet19.xsd" xmlns:mstns="http://tempuri.org/patholabDBDataSet19.xsd" xmlns="http://tempuri.org/patholabDBDataSet19.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="patholabDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="patholabDBConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Pathology.My.MySettings.GlobalReference.Default.patholabDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TestRecordTableAdapter" GeneratorDataComponentClassName="TestRecordTableAdapter" Name="TestRecord" UserDataComponentName="TestRecordTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="patholabDBConnectionString (MySettings)" DbObjectName="dbo.TestRecord" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TestRecord] WHERE (([TId] = @Original_TId) AND ((@IsNull_TGroup = 1 AND [TGroup] IS NULL) OR ([TGroup] = @Original_TGroup)) AND ((@IsNull_TestName = 1 AND [TestName] IS NULL) OR ([TestName] = @Original_TestName)) AND ((@IsNull_NormalRange = 1 AND [NormalRange] IS NULL) OR ([NormalRange] = @Original_NormalRange)) AND ((@IsNull_Cost = 1 AND [Cost] IS NULL) OR ([Cost] = @Original_Cost)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TestName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NormalRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NormalRange" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TestRecord] ([TId], [TGroup], [TestName], [NormalRange], [Cost]) VALUES (@TId, @TGroup, @TestName, @NormalRange, @Cost);
SELECT TId, TGroup, TestName, NormalRange, Cost FROM TestRecord WHERE (TId = @TId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TestName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NormalRange" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TId, TGroup, TestName, NormalRange, Cost FROM dbo.TestRecord</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TestRecord] SET [TId] = @TId, [TGroup] = @TGroup, [TestName] = @TestName, [NormalRange] = @NormalRange, [Cost] = @Cost WHERE (([TId] = @Original_TId) AND ((@IsNull_TGroup = 1 AND [TGroup] IS NULL) OR ([TGroup] = @Original_TGroup)) AND ((@IsNull_TestName = 1 AND [TestName] IS NULL) OR ([TestName] = @Original_TestName)) AND ((@IsNull_NormalRange = 1 AND [NormalRange] IS NULL) OR ([NormalRange] = @Original_NormalRange)) AND ((@IsNull_Cost = 1 AND [Cost] IS NULL) OR ([Cost] = @Original_Cost)));
SELECT TId, TGroup, TestName, NormalRange, Cost FROM TestRecord WHERE (TId = @TId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TestName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NormalRange" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TestName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TestName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_NormalRange" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NormalRange" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NormalRange" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TId" DataSetColumn="TId" />
              <Mapping SourceColumn="TGroup" DataSetColumn="TGroup" />
              <Mapping SourceColumn="TestName" DataSetColumn="TestName" />
              <Mapping SourceColumn="NormalRange" DataSetColumn="NormalRange" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="patholabDBDataSet19" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="patholabDBDataSet19" msprop:Generator_UserDSName="patholabDBDataSet19" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TestRecord" msprop:Generator_UserTableName="TestRecord" msprop:Generator_RowDeletedName="TestRecordRowDeleted" msprop:Generator_TableClassName="TestRecordDataTable" msprop:Generator_RowChangedName="TestRecordRowChanged" msprop:Generator_RowClassName="TestRecordRow" msprop:Generator_RowChangingName="TestRecordRowChanging" msprop:Generator_RowEvArgName="TestRecordRowChangeEvent" msprop:Generator_RowEvHandlerName="TestRecordRowChangeEventHandler" msprop:Generator_TablePropName="TestRecord" msprop:Generator_TableVarName="tableTestRecord" msprop:Generator_RowDeletingName="TestRecordRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TId" msprop:Generator_UserColumnName="TId" msprop:Generator_ColumnPropNameInRow="TId" msprop:Generator_ColumnVarNameInTable="columnTId" msprop:Generator_ColumnPropNameInTable="TIdColumn" type="xs:int" />
              <xs:element name="TGroup" msprop:Generator_UserColumnName="TGroup" msprop:Generator_ColumnPropNameInRow="TGroup" msprop:Generator_ColumnVarNameInTable="columnTGroup" msprop:Generator_ColumnPropNameInTable="TGroupColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestName" msprop:Generator_UserColumnName="TestName" msprop:Generator_ColumnPropNameInRow="TestName" msprop:Generator_ColumnVarNameInTable="columnTestName" msprop:Generator_ColumnPropNameInTable="TestNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NormalRange" msprop:Generator_UserColumnName="NormalRange" msprop:Generator_ColumnPropNameInRow="NormalRange" msprop:Generator_ColumnVarNameInTable="columnNormalRange" msprop:Generator_ColumnPropNameInTable="NormalRangeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cost" msprop:Generator_UserColumnName="Cost" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" msprop:Generator_ColumnPropNameInTable="CostColumn" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TestRecord" />
      <xs:field xpath="mstns:TId" />
    </xs:unique>
  </xs:element>
</xs:schema>